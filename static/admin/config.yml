backend:
    name: github
    repo: flsinternationaldev/fls-international
    branch: master # Branch to update (optional; defaults to master)

local_backend: true # TODO: Check if this prohibits the CMS from running on Netlify (production)

publish_mode: editorial_workflow

media_folder: static/assets
public_folder: /assets

collections:
    - name: 'elements'
      label: 'Elements'
      files:
          - file: 'src/netlify-content/elements/footer-element.md'
            label: 'Footer'
            name: 'footer'
            fields:
                - widget: 'object'
                  label: 'Contact Info'
                  name: 'contactInfo'
                  fields:
                      - { label: 'Title', name: 'title', widget: 'string' }
                      - { label: 'Address', name: 'address', widget: 'string' }
                      - {
                            label: 'Phone Number',
                            name: 'phoneNumber',
                            widget: 'string',
                        }
                      - { label: 'Email', name: 'email', widget: 'string' }
                - widget: 'object'
                  label: 'Information Links'
                  name: 'informationLinks'
                  fields:
                      - { label: 'Title', name: 'title', widget: 'string' }
                      - {
                            label: 'Links',
                            name: 'links',
                            widget: 'list',
                            label_singular: 'information link',
                            fields:
                                [
                                    {
                                        widget: 'string',
                                        label: 'Link Name',
                                        name: 'name',
                                    },
                                    {
                                        widget: 'string',
                                        label: 'Path',
                                        name: 'path',
                                    },
                                ],
                        }
          - file: 'src/netlify-content/elements/announcement-element.md'
            label: 'Announcement Banner'
            name: 'announcementBanner'
            fields:
                - widget: 'string'
                  label: 'Announcement Banner Copy'
                  name: 'copy'
                  hint: 'The text that will appear in the banner.'
                - widget: 'string'
                  label: 'Path'
                  name: 'path'
                  hint: 'The page to redirect to if the banner is clicked.'
                  required: false
                - widget: 'boolean'
                  required: false
                  name: 'showBanner'
                  label: 'Show Banner'
                  hint: 'Whether or not the banner should render on the site. Note that the banner is global, so, showing or hiding it will show or hide it on ALL pages.'
    - name: staticPages
      label: Static Pages
      files:
          - file: 'src/netlify-content/pages/static/home.md'
            label: 'Home Page'
            name: 'home'
            fields:
                - widget: 'list'
                  label: 'Hero Carousel Items'
                  name: 'carousel_settings'
                  label_singular: 'hero carousel item'
                  fields:
                      - { label: 'Title', name: 'title', widget: 'text' }
                      - { label: 'Copy', name: 'copy', widget: 'text' }
                      - {
                            label: 'Carousel Image',
                            name: 'carousel-image',
                            widget: 'image',
                        }
                - widget: 'object'
                  label: 'Explore Your World'
                  name: 'explore_your_world'
                  fields:
                      - { label: 'Title', name: 'title', widget: 'text' }
                      - { label: 'Subtitle', name: 'subtitle', widget: 'text' }
                      - { label: 'Copy', name: 'copy', widget: 'text' }
                - widget: 'object'
                  label: 'Start Your Journey'
                  name: 'start_your_journey'
                  fields:
                      - { label: 'Title', name: 'title', widget: 'text' }
                      - { label: 'Subtitle', name: 'subtitle', widget: 'text' }
                      - { label: 'Copy', name: 'copy', widget: 'text' }
                - widget: 'object'
                  label: 'Our Popular Programs'
                  name: 'our_popular_programs'
                  fields:
                      - { label: 'Title', name: 'title', widget: 'text' }
                      - { label: 'Subtitle', name: 'subtitle', widget: 'text' }
                      - { label: 'Copy', name: 'copy', widget: 'text' }
                - widget: 'object'
                  label: 'How Is Your English?'
                  name: 'how_is_your_english'
                  fields:
                      - { label: 'Title', name: 'title', widget: 'text' }
                      - { label: 'Subtitle', name: 'subtitle', widget: 'text' }
                      - { label: 'Copy', name: 'copy', widget: 'text' }
          - file: 'src/netlify-content/pages/static/about-us.md'
            label: 'About Us'
            name: 'aboutUs'
            fields:
                - widget: 'markdown'
                  label: 'About Us Page Content'
                  name: 'pageContent'
                  hint: 'Any and all content entered here will be preserved when this CMS entry is fully integrated with the production site'
    - name: 'navbar-item'
      label: 'Navbar Items'
      create: true
      folder: 'src/netlify-content/navbar-items'
      identifier_field: name
      label_singular: 'navbar item'
      summary: '{{name}} - {{order}}'
      fields:
          - {
                label: 'Path',
                name: 'path',
                widget: 'string',
                hint: 'The URL the navbar item will go to. Should be all lowercase & use dashes in place of spaces, e.g. program-pages',
            }
          - { label: 'Page Name', name: 'name', widget: 'string' }
          - {
                label: 'Links collection Name',
                name: 'collectionName',
                widget: 'string',
                required: false,
                hint: 'If provided, the site will try and pull all the names & URLs from each entry of a particular collection. e.g. for "program-pages", the site will dynamically pull in the URLs & names for all entries in the Program Pages collection',
            }
          - {
                label: 'Order',
                name: 'order',
                widget: 'number',
                hint: 'The order this item will render in the navbar. The smaller the number, the closer to the left side of the navbar.',
            }
          - {
                label: 'Links',
                name: 'links',
                widget: 'list',
                hint: 'All nav link URLs will be prefaced by the path of the main nav item, e.g. /locations/link-name',
                required: false,
                fields:
                    [
                        {
                            label: 'Path',
                            name: 'path',
                            hint: 'The URL the navbar item link will go to. Should be all lowercase & use dashes in place of spaces, e.g. program-pages',
                            widget: 'string',
                        },
                        { label: 'Page Name', name: 'name', widget: 'string' },
                        {
                            label: 'Collection Name',
                            name: 'collectionName',
                            widget: 'string',
                            required: false,
                            hint: 'If provided, the site will try and pull all the names & URLs from each entry of a particular collection. e.g. for "program-pages", the site will dynamically pull in the URLs & names for all entries in the Program Pages collection',
                        },
                        {
                            label: 'Is External Link',
                            name: 'isExternalLink',
                            widget: 'boolean',
                            required: false,
                            hint: 'Like the name suggests, tick this if the link provided leads to a page that is not on the site',
                        },
                        {
                            label: 'Sublinks',
                            name: 'links',
                            widget: 'list',
                            required: false,
                            fields:
                                [
                                    {
                                        label: 'Path',
                                        name: 'path',
                                        required: false,
                                        widget: 'string',
                                    },
                                    {
                                        label: 'Page Name',
                                        name: 'name',
                                        widget: 'string',
                                        required: false,
                                    },
                                ],
                        },
                    ],
            }
    - name: 'locationsDynamicPages'
      label: 'Locations Dynamic Pages'
      create: true
      folder: 'src/netlify-content/pages/dynamic/locations'
      summary: '{{name}} - {{centerNameRelation}}'
      label_singular: 'location dynamic page'
      fields:
          - {
                label: 'Path',
                name: 'path',
                widget: 'string',
                hint: 'The URL for the page. Should be all lower case, and uses dashes instead of spaces, e.g. computer-science-camp',
            }
          - {
                label: 'Location Name',
                name: 'name',
                widget: 'relation',
                valueField: 'name',
                searchFields: ['name'],
                collection: 'locationsData',
                hint: 'The city & state of the location. Rendered as the main title of the page.',
            }
          - {
                label: 'Center Name',
                name: 'centerNameRelation',
                widget: 'relation',
                valueField: 'centerName',
                searchFields: ['centerName'],
                collection: 'locationsData',
                multiple: true,
            }
          - {
                label: 'Description',
                name: 'description',
                widget: 'string',
                hint: '1 - 3 sentences describing the location. Used on the location card.',
            }
          - {
                label: 'Quick Facts',
                name: 'quick-facts',
                widget: 'list',
                label_singular: 'quick fact',
                fields:
                    [
                        { label: 'Name', name: 'name', widget: 'string' },
                        { label: 'Icon', name: 'icon', widget: 'image' },
                        {
                            label: 'Items',
                            name: 'items',
                            hint: 'Separate each item with a bullet point',
                            widget: 'markdown',
                        },
                    ],
            }
          - {
                label: 'Carousel Images',
                name: 'carousel-images',
                widget: 'list',
                field:
                    {
                        label: 'Carousel Image',
                        name: 'carousel-image',
                        widget: 'image',
                    },
            }
          - {
                label: 'Location post content',
                name: 'post-content',
                widget: 'markdown',
            }
    - name: 'inPersonProgramsDynamicPages'
      label: 'In Person Programs Dynamic Pages'
      create: true
      folder: 'src/netlify-content/pages/dynamic/programs/in-person'
      identifier_field: name
      fields:
          - {
                label: 'Path',
                name: 'path',
                widget: 'string',
                hint: 'The URL for the page. Should be all lower case, and uses dashes instead of spaces, e.g. path-name-here. ',
            }
          - {
                label: 'name',
                name: 'name',
                widget: 'relation',
                collection: 'inPersonProgramsData',
                searchFields: ['name'],
                displayFields: ['name'],
                valueField: 'name',
                hint: 'The program name, which will act as the page title',
            }
          - { label: 'Hero Image', name: 'hero-image', widget: 'image' }
          - {
                label: 'Program Details',
                name: 'programDetails',
                widget: 'object',
                fields:
                    [
                        {
                            label: 'Lessons per week',
                            name: 'lessonsPerWeek',
                            widget: 'relation',
                            collection: 'inPersonProgramsData',
                            searchFields: ['lessonsPerWeek'],
                            displayFields: ['lessonsPerWeek'],
                            valueField: 'lessonsPerWeek',
                        },
                        {
                            label: 'Hours per week',
                            name: 'hoursPerWeek',
                            widget: 'relation',
                            collection: 'inPersonProgramsData',
                            searchFields: ['hoursPerWeek'],
                            displayFields: ['hoursPerWeek'],
                            valueField: 'hoursPerWeek',
                        },
                        {
                            label: 'Minutes per lesson',
                            name: 'minutesPerLesson',
                            widget: 'relation',
                            collection: 'inPersonProgramsData',
                            searchFields: ['minutesPerLesson'],
                            displayFields: ['minutesPerLesson'],
                            valueField: 'minutesPerLesson',
                        },
                    ],
            }
          - {
                label: 'Description',
                name: 'description',
                widget: 'string',
                hint: 'A 1 - 3 sentence summary of the program. Used on the program card.',
            }
          - {
                label: 'Program post content',
                name: 'program-post-content',
                widget: 'markdown',
            }
          - {
                label: 'Program features content',
                name: 'program-features-content',
                widget: 'markdown',
            }
    - name: 'onlineProgramsDynamicPages'
      label: 'Online Programs Dynamic Pages'
      create: true
      folder: 'src/netlify-content/pages/dynamic/programs/online'
      identifier_field: name
      label_singular: 'online program dynamic page'
      fields:
          - {
                label: 'Path',
                name: 'path',
                widget: 'string',
                hint: 'The URL for the page. Should be all lower case, and uses dashes instead of spaces, e.g. path-name-here. ',
            }
          - {
                label: 'Name',
                name: 'name',
                widget: 'relation',
                valueField: 'name',
                searchFields: ['name'],
                collection: 'onlineProgramsData',
                hint: 'The name of the online program. Used as the page title.',
            }
          - {
                label: 'Type',
                name: 'type',
                widget: 'relation',
                valueField: 'onlineProgramType',
                searchFields: ['onlineProgramType'],
                collection: 'onlineProgramsData',
                hint: 'The type of online program this is e.g. Online Essential Program. Used similarly to "locations" for in-person programs.',
            }
          - { label: 'Hero Image', name: 'hero-image', widget: 'image' }
          - {
                label: 'Program Details',
                name: 'programDetails',
                widget: 'object',
                fields:
                    [
                        {
                            label: 'Lessons per week',
                            name: 'lessonsPerWeek',
                            widget: 'relation',
                            collection: 'onlineProgramsData',
                            searchFields: ['lessonsPerWeek'],
                            displayFields: ['lessonsPerWeek'],
                            valueField: 'lessonsPerWeek',
                        },
                        {
                            label: 'Hours per week',
                            name: 'hoursPerWeek',
                            widget: 'relation',
                            collection: 'onlineProgramsData',
                            searchFields: ['hoursPerWeek'],
                            displayFields: ['hoursPerWeek'],
                            valueField: 'hoursPerWeek',
                        },
                        {
                            label: 'Minutes per lesson',
                            name: 'minutesPerLesson',
                            widget: 'relation',
                            collection: 'onlineProgramsData',
                            searchFields: ['minutesPerLesson'],
                            displayFields: ['minutesPerLesson'],
                            valueField: 'minutesPerLesson',
                        },
                    ],
            }
          - {
                label: 'Description',
                name: 'description',
                widget: 'string',
                hint: 'A 1 - 3 sentence summary of the program. Used on the program card.',
            }
          - {
                label: 'Program post content',
                name: 'program-post-content',
                widget: 'markdown',
            }
          - {
                label: 'Program features content',
                name: 'program-features-content',
                widget: 'markdown',
            }
    - name: 'specialtyToursDynamicPages'
      label: 'Specialty Tours Dynamic Pages'
      create: true
      folder: 'src/netlify-content/pages/dynamic/programs/specialty-tours'
      summary: '{{name}} @ {{centerNameRelation}}'
      identifier_field: name
      label_singular: 'specialty tour dynamic page'
      fields:
          - {
                label: 'Path',
                name: 'path',
                widget: 'string',
                hint: 'The URL for the page. Should be all lower case, and uses dashes instead of spaces, e.g. path-name-here. ',
            }
          - {
                label: 'Name',
                name: 'name',
                widget: 'relation',
                collection: 'specialtyToursData',
                valueField: 'name',
                searchFields: ['name'],
                displayFields: ['name'],
                hint: 'The name of the specialty tour. Will be rendered as the page title.',
            }
          - {
                label: 'Center',
                name: 'centerNameRelation',
                widget: 'relation',
                hint: 'The center this specialty tour is associated with. Values in this dropdown are pulled from the "Locations Data" collection.',
                collection: 'locationsData',
                # TODO: Might be worth making a PR to the netlify docs to note that this is expected to be 'valueField', not 'value_field' like they claim
                # https://www.netlifycms.org/docs/widgets/relation/
                valueField: 'centerName',
                searchFields: ['centerName'],
                multiple: true,
            }
          - {
                label: 'Program Dates',
                name: 'programDates',
                widget: 'list',
                label_sigular: 'program date',
                summary: '{{arrive}} - {{depart}}',
                fields:
                    [
                        {
                            label: 'Arrive',
                            name: 'arrive',
                            widget: 'relation',
                            collection: 'specialtyToursData',
                            valueField: 'programDates.*.arrive',
                            searchFields: ['programDates.*.arrive'],
                            displayFields: ['programDates.*.arrive'],
                        },
                        {
                            label: 'Depart',
                            name: 'depart',
                            widget: 'relation',
                            collection: 'specialtyToursData',
                            valueField: 'programDates.*.depart',
                            searchFields: ['programDates.*.depart'],
                            displayFields: ['programDates.*.depart'],
                        },
                    ],
            }
          - {
                label: 'Sample Calendar',
                name: 'sampleCalendar',
                widget: 'relation',
                collection: 'specialtyToursData',
                valueField: 'sampleCalendar',
                searchFields: ['sampleCalendar'],
                displayFields: ['sampleCalendar'],
            }
          - {
                label: 'Carousel Images',
                name: 'carousel-images',
                widget: 'list',
                hint: 'Background of program card will be the first carousel image',
                field:
                    {
                        label: 'Carousel Image',
                        name: 'carousel-image',
                        widget: 'image',
                    },
            }
          - {
                label: 'Program Details',
                name: 'programDetails',
                widget: 'object',
                fields:
                    [
                        {
                            label: 'Minimum Age',
                            name: 'minimumAge',
                            widget: 'relation',
                            collection: 'specialtyToursData',
                            valueField: 'minimumAge',
                            searchFields: ['minimumAge'],
                            displayFields: ['minimumAge'],
                        },
                        {
                            label: 'Duration',
                            name: 'durationRelation',
                            widget: 'relation',
                            collection: 'specialtyToursData',
                            valueField: 'duration',
                            searchFields: ['duration'],
                            displayFields: ['duration'],
                        },
                        {
                            label: 'Price',
                            name: 'price',
                            widget: 'relation',
                            collection: 'specialtyToursData',
                            valueField: 'price',
                            searchFields: ['price'],
                            displayFields: ['price'],
                        },
                    ],
            }
          - {
                label: 'Specialty Tour Description',
                name: 'specialty-tour-description',
                widget: 'markdown',
            }
          - {
                label: 'Activities and Excursions',
                name: 'activities-and-excursions',
                widget: 'markdown',
            }
          - { label: 'Features', name: 'features', widget: 'markdown' }
          - {
                label: 'Accommodations',
                name: 'accommodations',
                widget: 'markdown',
            }
    - name: 'onlineProgramsData'
      label: 'Online Programs Data'
      create: true
      folder: 'src/netlify-content/data/programs/online'
      identifier_field: name
      label_singular: 'online program data'
      fields:
          - { name: 'name', label: 'Online Program Name', widget: 'string' }
          - {
                name: 'onlineProgramType',
                label: 'Online Program Type',
                widget: 'relation',
                collection: 'onlineProgramTypesData',
                valueField: 'name',
                searchFields: ['name'],
                hint: 'The type of online program this is e.g. Online Essential Program. Used similarly to "locations" for in-person programs.',
            }
          - {
                # TODO: This new pattern for price details needs to be integrated into the other program types
                label: 'Price Details',
                name: 'priceDetails',
                widget: 'object',
                fields:
                    [
                        {
                            label: 'Range',
                            required: false,
                            hint: 'Use these fields if the specialty tour duration can be seleced by the student, and is not set ahead of time by the administrators. The student will be charged per week.',
                            name: 'range',
                            widget: 'object',
                            fields:
                                [
                                    {
                                        label: 'Max Weeks',
                                        name: 'maxWeeks',
                                        widget: 'number',
                                        required: false,
                                    },
                                    {
                                        label: 'Exceed max weeks?',
                                        name: 'exceedMaxWeeks',
                                        required: false,
                                        hint: 'If "true", will render on website as "[maxWeekNumber]+" (e.g. if max weeks = 4, will render as "4+"',
                                        widget: 'boolean',
                                    },
                                    {
                                        label: 'Week Thresholds',
                                        name: 'weekThresholds',
                                        required: false,
                                        widget: 'list',
                                        fields:
                                            [
                                                {
                                                    label: 'Threshold Max',
                                                    name: 'thresholdMax',
                                                    widget: 'number',
                                                },
                                                {
                                                    label: 'Price Per Week',
                                                    name: 'pricePerWeek',
                                                    widget: 'number',
                                                },
                                            ],
                                    },
                                ],
                        },
                        {
                            label: 'Package',
                            name: 'package',
                            required: false,
                            hint: 'Use these fields if the specialty tour duration is set for the student, and not a range of weeks. The student will be charged a lump sum for the package.',
                            widget: 'object',
                            fields:
                                [
                                    {
                                        label: 'Duration',
                                        name: 'duration',
                                        widget: 'number',
                                        required: false,
                                    },
                                    {
                                        label: 'Price',
                                        name: 'price',
                                        widget: 'number',
                                        required: false,
                                    },
                                    {
                                        label: 'Pay Period',
                                        name: 'payPeriod',
                                        widget: 'select',
                                        required: false,
                                        options:
                                            [{ label: 'Once', value: 'once' }],
                                    },
                                ],
                        },
                    ],
            }
          - { label: 'Hours Per Week', name: 'hoursPerWeek', widget: 'string' }
          - {
                label: 'Lessons Per Week',
                name: 'lessonsPerWeek',
                widget: 'number',
            }
          - {
                label: 'Minutes Per Lesson',
                name: 'minutesPerLesson',
                widget: 'number',
            }
          - {
                # Should note, or enforce, that these are PST
                label: 'Times Offered',
                name: 'timesOffered',
                widget: 'list',
                label_singular: 'offered time',
                summary: '{{start}}',
                field:
                    {
                        name: 'start',
                        label: 'Start',
                        widget: 'datetime',
                        default: '',
                        time_format: 'LT',
                        format: 'LT',
                        picker_utc: false,
                        hint: 'This will only render the selected time on the site, and will totally ignore the date (e.g. 09/16/2020 9:00 AM will display as 9:00 AM)',
                    },
            }
          - {
                label: 'Term Dates',
                name: 'termDates',
                widget: 'list',
                required: false,
                summary: '{{start}} - {{end}}',
                label_singular: 'term date',
                fields: [
                        {
                            # TODO: Why is the CMS UI not respecting the format options?
                            label: 'Start',
                            name: 'start',
                            widget: 'datetime',
                            date_format: 'M/D',
                            time_format: false,
                            picker_utc: false,
                            format: 'M/D',
                            hint: 'This will render as "Date/Month" in app (e.g. 09/16/2020 will dislay as 9/16)',
                        },
                        {
                            label: 'End',
                            name: 'end',
                            widget: 'datetime',
                            date_format: 'M/D',
                            time_format: false,
                            picker_utc: false,
                            format: 'M/D',
                            hint: 'This will render as "Date/Month" on the site (e.g. 09/16/2020 will dislay as 9/16)',
                        },
                    ],
            }
            # TODO: Supplements
    - name: 'inPersonProgramsData'
      label: 'In-Person Programs Data'
      create: true
      folder: 'src/netlify-content/data/programs/in-person'
      identifier_field: name
      label_singular: 'in-person program data'
      summary: '{{name}} @ {{centerNameRelation}}'
      fields:
          - {
                name: 'name',
                label: 'In-Person Program Name',
                widget: 'string',
                hint: 'Note that, for in-person programs, the main header of the page will be the location name',
            }
          - {
                label: 'Center',
                name: 'centerNameRelation',
                widget: 'relation',
                collection: 'locationsData',
                multiple: true,
                valueField: 'centerName',
                searchFields: ['centerName'],
                displayFields: ['centerName'],
                hint: 'This field helps the site logic differentiate between the same program at different locations',
            }
          - {
                name: 'durationOptions',
                label: 'Duration Options',
                widget: 'object',
                fields:
                    [
                        {
                            label: 'Max Weeks',
                            name: 'maxWeeks',
                            widget: 'number',
                        },
                        {
                            label: 'Exceed max weeks?',
                            name: 'exceedMaxWeeks',
                            required: false,
                            hint: 'If "true", will render on website as "[maxWeekNumber]+" (e.g. if max weeks = 4, will render as "4+"',
                            widget: 'boolean',
                        },
                        {
                            label: 'Week Thresholds',
                            name: 'weekThresholds',
                            required: false,
                            widget: 'list',
                            fields:
                                [
                                    {
                                        label: 'Threshold Max',
                                        name: 'thresholdMax',
                                        widget: 'number',
                                    },
                                    {
                                        label: 'Price Per Week',
                                        name: 'pricePerWeek',
                                        widget: 'number',
                                    },
                                ],
                        },
                    ],
            }
            # TODO: There is only one in-person program that does not have all the same hours per week for all the week thresholds. Check if this is intentional or not.
          - { label: 'Hours Per Week', name: 'hoursPerWeek', widget: 'string' }
          - {
                label: 'Lessons Per Week',
                name: 'lessonsPerWeek',
                widget: 'number',
            }
          - {
                label: 'Minutes Per Lesson',
                name: 'minutesPerLesson',
                widget: 'number',
            }
            # TODO: Supplements
    - name: 'specialtyToursData'
      label: 'Specialty Tours Data'
      create: true
      folder: 'src/netlify-content/data/programs/specialty-tours'
      identifier_field: name
      label_singular: 'specialty tour data'
      summary: '{{name}} @ {{centerNameRelation}}'
      fields:
          - { name: 'name', label: 'Specialty Tour Name', widget: 'string' }
          - {
                label: 'Center Name',
                name: 'centerNameRelation',
                widget: 'relation',
                collection: 'locationsData',
                valueField: 'centerName',
                searchFields: ['centerName'],
                displayFields: ['centerName'],
                multiple: true,
            }
          - { name: 'minimumAge', label: 'Minimum Age', widget: 'number' }
          - {
                # TODO: This new pattern for price details needs to be integrated into the other program types
                label: 'Price Details',
                name: 'priceDetails',
                widget: 'object',
                fields:
                    [
                        {
                            label: 'Range',
                            required: false,
                            hint: 'Use these fields if the specialty tour duration can be seleced by the student, and is not set ahead of time by the administrators. The student will be charged per week.',
                            name: 'range',
                            widget: 'object',
                            fields:
                                [
                                    {
                                        label: 'Max Weeks',
                                        name: 'maxWeeks',
                                        widget: 'number',
                                        required: false,
                                    },
                                    {
                                        label: 'Exceed max weeks?',
                                        name: 'exceedMaxWeeks',
                                        required: false,
                                        hint: 'If "true", will render on website as "[maxWeekNumber]+" (e.g. if max weeks = 4, will render as "4+"',
                                        widget: 'boolean',
                                    },
                                    {
                                        label: 'Week Thresholds',
                                        name: 'weekThresholds',
                                        required: false,
                                        widget: 'list',
                                        fields:
                                            [
                                                {
                                                    label: 'Threshold Max',
                                                    name: 'thresholdMax',
                                                    widget: 'number',
                                                },
                                                {
                                                    label: 'Price Per Week',
                                                    name: 'pricePerWeek',
                                                    widget: 'number',
                                                },
                                            ],
                                    },
                                ],
                        },
                        {
                            label: 'Package',
                            name: 'package',
                            required: false,
                            hint: 'Use these fields if the specialty tour duration is set for the student, and not a range of weeks. The student will be charged a lump sum for the package.',
                            widget: 'object',
                            fields:
                                [
                                    {
                                        label: 'Duration',
                                        name: 'duration',
                                        widget: 'number',
                                        required: false,
                                    },
                                    {
                                        label: 'Price',
                                        name: 'price',
                                        widget: 'number',
                                        required: false,
                                    },
                                    {
                                        label: 'Pay Period',
                                        name: 'payPeriod',
                                        widget: 'select',
                                        required: false,
                                        options:
                                            [{ label: 'Once', value: 'once' }],
                                    },
                                ],
                        },
                    ],
            }
          - {
                label: 'Program Dates',
                name: 'programDates',
                widget: 'list',
                label_sigular: 'program date',
                summary: '{{arrive}} - {{depart}}',
                fields: [
                        {
                            # Should note, or enforce, that these are PST
                            label: 'Arrive',
                            name: 'arrive',
                            widget: 'datetime',
                            default: '',
                            time_format: false,
                            picker_utc: false,
                            hint: 'This will only render the selected date on the site, and will totally ignore the time (e.g. 09/16/2020 9:00 AM will display as "Sep 16, 2020")',
                        },
                        {
                            label: 'Depart',
                            name: 'depart',
                            widget: 'datetime',
                            default: '',
                            time_format: false,
                            picker_utc: false,
                            hint: 'This will only render the selected date on the site, and will totally ignore the time (e.g. 09/16/2020 9:00 AM will display as "Sep 16, 2020")',
                        },
                    ],
            }
          - { label: 'Sample Calendar', name: 'sampleCalendar', widget: 'file' }
    - name: 'inPersonGeneralFeesData'
      label: 'In Person General Fees Data'
      create: true
      folder: 'src/netlify-content/data/general-fees/in-person'
      identifier_field: name
      label_singular: 'general fee data'
      summary: '{{name}} @ {{centerNameRelation}}'
      fields:
          - { name: 'name', label: 'Name', widget: 'string' }
          - {
                label: 'Center Name',
                name: 'centerNameRelation',
                widget: 'relation',
                multiple: true,
                hint: 'The center/s this general fee is associated with',
                valueField: 'centerName',
                searchFields: ['centerName'],
                collection: 'locationsData',
            }
          - {
                label: 'Price Details',
                name: 'priceDetails',
                widget: 'object',
                fields:
                    [
                        { label: 'price', name: 'price', widget: 'number' },
                        {
                            label: 'Pay Period',
                            name: 'payPeriod',
                            widget: 'select',
                            hint: 'How often should this fee be charged?',
                            options:
                                [
                                    'Once',
                                    'Per week',
                                    'Per Lesson',
                                    'Per Night',
                                    'Included',
                                ],
                        },
                    ],
            }
    - name: 'onlineGeneralFeesData'
      label: 'Online General Fees Data'
      create: true
      folder: 'src/netlify-content/data/general-fees/online'
      identifier_field: name
      label_singular: 'general fee data'
      summary: '{{name}} @ {{centerNameRelation}}'
      fields:
          - { name: 'name', label: 'Name', widget: 'string' }
          - {
                label: 'Price Details',
                name: 'priceDetails',
                widget: 'object',
                fields:
                    [
                        { label: 'price', name: 'price', widget: 'number' },
                        {
                            label: 'Pay Period',
                            name: 'payPeriod',
                            widget: 'select',
                            hint: 'How often should this fee be charged?',
                            options:
                                [
                                    'Once',
                                    'Per week',
                                    'Per Lesson',
                                    'Per Night',
                                    'Included',
                                ],
                        },
                    ],
            }
    - name: 'specialtyToursGeneralFeesData'
      label: 'Specialty Tours General Fees Data'
      create: true
      folder: 'src/netlify-content/data/general-fees/specialty-tours'
      identifier_field: name
      label_singular: 'general fee data'
      summary: '{{name}} @ {{centerNameRelation}}'
      fields:
          - { name: 'name', label: 'Name', widget: 'string' }
          - {
                label: 'Center Name',
                name: 'centerNameRelation',
                widget: 'relation',
                multiple: true,
                hint: 'The center/s this general fee is associated with',
                valueField: 'centerName',
                searchFields: ['centerName'],
                collection: 'locationsData',
            }
          - {
                label: 'Price Details',
                name: 'priceDetails',
                widget: 'object',
                fields:
                    [
                        { label: 'price', name: 'price', widget: 'number' },
                        {
                            label: 'Pay Period',
                            name: 'payPeriod',
                            widget: 'select',
                            hint: 'How often should this fee be charged?',
                            options:
                                [
                                    'Once',
                                    'Per week',
                                    'Per Lesson',
                                    'Per Night',
                                    'Included',
                                ],
                        },
                    ],
            }
    - name: 'locationsData'
      label: 'Locations Data'
      create: true
      folder: 'src/netlify-content/data/locations'
      summary: '{{centerName}} @ {{name}}'
      label_singular: 'location data'
      identifier_field: 'centerName'
      fields:
          - {
                label: 'Location Name',
                name: 'name',
                widget: 'string',
                hint: 'Should be a city and state abbreviation, e.g. "Boston, MA"',
            }
          - {
                label: 'Center Name',
                name: 'centerName',
                widget: 'string',
                hint: 'Should be the name of the single center associated with this location.',
            }
    - name: 'onlineProgramTypesData'
      label: 'Online Program Types Data'
      create: true
      folder: 'src/netlify-content/data/online-program-types'
      summary: '{{name}}'
      identifier_field: name
      label_singular: 'online program type data'
      hint: 'This can best be thought of as the "locations" for online programs, in terms of how it categorizes enhancements and time banks.'
      fields:
          - { label: 'Online Program Type', name: 'name', widget: 'string' }
          - {
                label: 'Online Program Type Description',
                name: 'onlineProgramTypeDescription',
                widget: 'string',
                hint: 'A 1 - 3 sentence description of the program type. Used on the online program dynamic pages',
            }
    - name: 'housingData'
      label: 'Housing Data'
      create: true
      folder: 'src/netlify-content/data/housing'
      summary: '{{name}} @ {{centerNameRelation}}'
      label_singular: 'housing data'
      identifier_field: 'name'
      fields:
          - { label: 'Housing Type', name: 'name', widget: 'string' }
          - {
                label: 'Center Names',
                name: 'centerNameRelation',
                widget: 'relation',
                multiple: true,
                collection: 'locationsData',
                searchFields: ['centerName'],
                valueField: 'centerName',
                hint: 'Should be the name of the center/centers associated with this housing option.',
            }
          - {
                label: 'Price Details',
                name: 'priceDetails',
                widget: 'object',
                required: false,
                fields:
                    [
                        { label: 'Price', name: 'price', widget: 'number' },
                        {
                            label: 'Pay Period',
                            name: 'payPeriod',
                            widget: 'select',
                            options: [{ label: 'Weekly', value: 'weekly' }],
                        },
                    ],
            }
          - { label: 'Meals Per Week', name: 'mealsPerWeek', widget: 'number' }
          - {
                label: 'Minimum Age',
                name: 'minimumAge',
                widget: 'number',
                required: false,
            }
          - {
                label: 'Additional Notes',
                name: 'notes',
                widget: list,
                required: false,
                field: { label: 'note', name: 'note', widget: 'string' },
            }
    - name: 'inPersonEnhancementsData'
      label: 'In Person Enhancements Data'
      create: true
      folder: 'src/netlify-content/data/enhancements/in-person'
      summary: '{{name}} @ {{centerNameRelation}}'
      label_singular: 'enhancement data'
      identifier_field: 'name'
      fields:
          - { label: 'Enhancement Name', name: 'name', widget: 'string' }
          - {
                label: 'Center Names',
                name: 'centerNameRelation',
                widget: 'relation',
                multiple: true,
                collection: 'locationsData',
                searchFields: ['centerName'],
                valueField: 'centerName',
                hint: 'Should be the name of the center/centers associated with this enhancement.',
            }
          - {
                label: 'Price Details',
                name: 'priceDetails',
                widget: 'object',
                required: false,
                fields:
                    [
                        { label: 'Price', name: 'price', widget: 'number' },
                        {
                            label: 'Pay Period',
                            name: 'payPeriod',
                            widget: 'select',
                            options:
                                [
                                    { label: 'Weekly', value: 'weekly' },
                                    { label: 'once', value: 'once' },
                                    {
                                        label: 'Per 3 Unit Class',
                                        value: 'three-unit-class',
                                    },
                                    {
                                        label: 'Per 4 Weeks',
                                        value: 'per-four-weeks',
                                    },
                                    {
                                        label: 'Each additional week',
                                        value: 'additional-week',
                                    },
                                ],
                        },
                    ],
            }
          - {
                label: 'Additional Notes',
                name: 'notes',
                widget: list,
                required: false,
                field: { label: 'note', name: 'note', widget: 'string' },
            }
    - name: 'specialtyToursEnhancementsData'
      label: 'Specialty Tours Enhancements Data'
      create: true
      folder: 'src/netlify-content/data/enhancements/specialty-tours'
      summary: '{{name}} @ {{centerNameRelation}}'
      label_singular: 'enhancement data'
      identifier_field: 'name'
      fields:
          - { label: 'Enhancement Name', name: 'name', widget: 'string' }
          - {
                label: 'Center Names',
                name: 'centerNameRelation',
                widget: 'relation',
                multiple: true,
                collection: 'locationsData',
                searchFields: ['centerName'],
                valueField: 'centerName',
                hint: 'Should be the name of the center/centers associated with this enhancement.',
            }
          - {
                label: 'Price Details',
                name: 'priceDetails',
                widget: 'object',
                required: false,
                fields:
                    [
                        { label: 'Price', name: 'price', widget: 'number' },
                        {
                            label: 'Pay Period',
                            name: 'payPeriod',
                            widget: 'select',
                            options:
                                [
                                    { label: 'Weekly', value: 'weekly' },
                                    { label: 'once', value: 'once' },
                                    {
                                        label: 'Per 3 Unit Class',
                                        value: 'three-unit-class',
                                    },
                                    {
                                        label: 'Per 4 Weeks',
                                        value: 'per-four-weeks',
                                    },
                                    {
                                        label: 'Each additional week',
                                        value: 'additional-week',
                                    },
                                ],
                        },
                    ],
            }
          - {
                label: 'Additional Notes',
                name: 'notes',
                widget: list,
                required: false,
                field: { label: 'note', name: 'note', widget: 'string' },
            }
    - name: 'onlineEnhancementsData'
      label: 'Online Enhancements Data'
      create: true
      folder: 'src/netlify-content/data/enhancements/online'
      summary: '{{name}} @ {{onlineProgramTypeRelation}}'
      label_singular: 'enhancement data'
      identifier_field: 'name'
      fields:
          - { label: 'Enhancement Name', name: 'name', widget: 'string' }
          - {
                label: 'Online Program Type ',
                name: 'onlineProgramTypeRelation',
                widget: 'relation',
                multiple: true,
                hint: 'The online program type this enhancement is associated with',
                valueField: 'name',
                searchFields: ['name'],
                collection: 'onlineProgramTypesData',
            }
          - {
                label: 'Price Details',
                name: 'priceDetails',
                widget: 'object',
                required: false,
                fields:
                    [
                        { label: 'Price', name: 'price', widget: 'number' },
                        {
                            label: 'Pay Period',
                            name: 'payPeriod',
                            widget: 'select',
                            options:
                                [
                                    { label: 'Weekly', value: 'weekly' },
                                    { label: 'once', value: 'once' },
                                    {
                                        label: 'Per 3 Unit Class',
                                        value: 'three-unit-class',
                                    },
                                    {
                                        label: 'Per 4 Weeks',
                                        value: 'per-four-weeks',
                                    },
                                    {
                                        label: 'Each additional week',
                                        value: 'additional-week',
                                    },
                                ],
                        },
                    ],
            }
          - {
                label: 'Additional Notes',
                name: 'notes',
                widget: list,
                required: false,
                field: { label: 'note', name: 'note', widget: 'string' },
            }
